@using IceProducts.Shared.InputModels;


<div class="limiter">
    <div class="container-login100">
        <div class="wrap-login100">
            <EditForm Model="ChangePasswordModel" class="login100-form">

                <span class="login100-form-title" style="padding-bottom:26px;font-family:Calibri">
                    Change Password
                </span>

                <span class="login100-form-title" style="padding-bottom:48px;">
                    <i class="bi bi-eye" style="width: 112px;"></i>
                </span>

                <div class="form-group mt-2">
                    <span><i class="bi bi-lock"></i></span>
                    <InputText @bind-Value="ChangePasswordModel.NewPassword" type="password" class="form-field" placeholder="New Password" style="outline:none;"></InputText>
                </div>

                <div class="form-group mt-2">
                    <span><i class="bi bi-lock"></i></span>
                    <InputText @bind-Value="ConfirmPassword" class="form-field" placeholder="Confirm Password" style="outline:none;"></InputText>
                </div>

                <div class="text-center mt-3">
                    <button type="submit" class="btn btn-dark" style="padding:8px 35px;box-shadow:none;" disabled="@_isLoggingIn">
                        @if (_isLoggingIn)
                        {
                            <span class="simple-loader"></span>
                        }
                        else
                        {
                            <span>Save</span>
                        }
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public ChangePasswordInputModel ChangePasswordModel { get; set; } = new ChangePasswordInputModel();

    [Parameter]
    public string ConfirmPassword { get; set; } = string.Empty;

    [Inject]
    public HttpClient HttpRequest { get; set; }


    private bool _disableSubmit = false;
    private bool _isLoggingIn = false;
    private bool _isMatch = true;


    private async Task Login()
    {
        if(ChangePasswordModel.NewPassword != ConfirmPassword)
        {
            _isMatch = false;
            return;
        }

        _isMatch = true;
        _disableSubmit = true;
        _isLoggingIn = true;

        string apiPath = "api/email/send";
        var response = await HttpRequest.PostAsJsonAsync(apiPath, ChangePasswordModel);


        if (response.IsSuccessStatusCode)
        {
            // do something
        }
        else
        {
            // do something
        }

        _disableSubmit = false;
        _isLoggingIn = false;
    }

}
