@page "/admin"
@using IceProducts.Client.Components
@using IceProducts.Shared.Dtos;
@using IceProducts.Shared.InputModels;
@inject IDialogService Dialog
@layout AdminLayout




<MudIconButton OnClick="@((e) => OpenDialog(maxWidth))" Icon="@Icons.Material.Filled.Add" Style="border-radius:50%; position:fixed; bottom:0; right:0; padding:10px; margin:20px;" Variant="Variant.Filled" Color="Color.Default" Size="Size.Large" />
@if(Products != null)
{
    <Table Products="Products"></Table>    
}

@code {
    public ProductInputModel DialogProduct { get; set; } = new ProductInputModel();

    DialogOptions maxWidth = new DialogOptions() { MaxWidth = MaxWidth.Small, FullWidth = false };

    public HashSet<ProductDto>? Products { get; set; } = null;

    [Inject]
    public HttpClient HttpRequest { get; set; }



    private async Task OpenDialog(DialogOptions options)
    {
        var dialogResult =  Dialog.Show<AddProductDialogue>("", options);

        var userChoice = await dialogResult.Result;

        if (!userChoice.Canceled)
        {
            var result = await dialogResult.GetReturnValueAsync<ProductDto>();
            Products?.Add(result);
        }
    }
    protected override async Task OnInitializedAsync()
    {
        string apiPath = "api/product/";
        var products = await HttpRequest.GetFromJsonAsync<IEnumerable<ProductDto>>(apiPath);

        if(products != null)
        {
            Products = products.ToHashSet();
        }else
        {
            Products = new HashSet<ProductDto>();
        }
    }


}
